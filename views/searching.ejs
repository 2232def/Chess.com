<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="../css/searching.css">
    <script src="https://unpkg.com/@tailwindcss/browser@4"></script>
</head>
<!-- <style>
    body {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .loader {
        background: url('../assets/mandala.png') repeat center;
        height: 100vh;
        width: 100vw;
        background-size: cover;
    }

    .opponent-searching {
        background: url('../assets/nameplate.png') center no-repeat;
        background-size: contain;
        height: 220px;
        width: 313px;
        padding: 50px 120px 0 0;
    }

    .user-avatar {
        background: url('../assets/flip_nameplate.png') center no-repeat;
        background-size: contain;
        height: 220px;
        width: 313px;
        padding: 0 220px 50px 0;
    }

    /* Mobile/Small Tablet Responsive (360px - 768px) */
    @media (min-width: 360px) and (max-width: 768px) {
        .opponent-searching {
            height: 140px;
            width: 350px;
            padding: 30px 70px 0 0;
        }

        .user-avatar {
            height: 140px;
            width: 350px;
            padding: 0 130px 30px 0;
        }

        .opponent-avatar,
        .user-avatar-box {
            height: 60px !important;
            width: 60px !important;
        }

        .opponent-name,
        .user-name {
            font-size: 28px !important;
        }

        .opponent-role,
        .user-role {
            font-size: 16px !important;
        }

        .vs-text {
            font-size: 60px !important;
        }

        .main-container {
            padding: 20px;
            gap: 60px;
        }
    }

    /* Extra Small Mobile (360px - 480px) */
    @media (min-width: 360px) and (max-width: 480px) {
        .opponent-searching {
            height: 120px;
            width: 320px;
            padding: 25px 60px 0 0;
        }

        .user-avatar {
            height: 120px;
            width: 320px;
            padding: 0 110px 25px 0;
        }

        .opponent-avatar,
        .user-avatar-box {
            height: 50px !important;
            width: 50px !important;
        }

        .opponent-name,
        .user-name {
            font-size: 24px !important;
        }

        .opponent-role,
        .user-role {
            font-size: 14px !important;
        }

        .vs-text {
            font-size: 48px !important;
        }

        .main-container {
            padding: 15px;
            gap: 40px;
        }
    }

    /* Landscape mode for small screens */
    @media (min-width: 360px) and (max-height: 740px) and (orientation: landscape) {
        .opponent-searching {
            height: 100px;
            width: 280px;
            padding: 20px 50px 0 0;
        }

        .user-avatar {
            height: 100px;
            width: 280px;
            padding: 0 50px 20px 0;
        }

        .opponent-avatar,
        .user-avatar-box {
            height: 45px !important;
            width: 45px !important;
        }

        .opponent-name,
        .user-name {
            font-size: 20px !important;
        }

        .vs-text {
            font-size: 40px !important;
        }

        .main-container {
            gap: 30px;
        }
    }
</style> -->

<body>
    <div class="bg-pattern"></div>


    <img class="mandala mandala-left" src="/assets/ChatGPT Image Oct 16, 2025, 06_26_35 PM.png" alt="">

    <img class="mandala mandala-right" src="/assets/ChatGPT Image Oct 16, 2025, 06_26_35 PM.png" alt="">

    <div class="container">

        <!-- VS Battle Section -->
        <div class="battle-arena">
            <!-- Player 1 Card -->
            <div class="player-card player1">
                <div class="card-pattern"></div>
                <div class="avatar">
                    <svg class="avatar-mandala" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
                        <g transform="translate(100, 100)">
                            <!-- Outer petals -->
                            <g>
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(0)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(45)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(90)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(135)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(180)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(225)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(270)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(315)" />
                            </g>

                            <!-- Circles -->
                            <circle cx="0" cy="0" r="75" fill="none" stroke="#d4af37" stroke-width="1" />
                            <circle cx="0" cy="0" r="60" fill="none" stroke="#d4af37" stroke-width="1.5" />
                            <circle cx="0" cy="0" r="45" fill="none" stroke="#d4af37" stroke-width="1" />

                            <!-- Inner petals -->
                            <g>
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(0)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(45)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(90)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(135)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(180)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(225)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(270)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(315)" />
                            </g>

                            <!-- Center -->
                            <circle cx="0" cy="0" r="30" fill="none" stroke="#d4af37" stroke-width="1" />
                            <circle cx="0" cy="0" r="20" fill="none" stroke="#d4af37" stroke-width="1.5" />
                        </g>
                    </svg>
                    <div class="avatar-center">â™”</div>
                </div>

                <% if (user) {%>

                    <h2 class="player-name opponent-name" id="opponentName">Searching....</h2>
                    <p class="player-title opponent-role">Any</p>
                    <div class="player-stats">
                        <!-- <div class="stat">
                        <span class="stat-value"><%= user.rating %></span>
                        <span class="stat-label">Rating</span>
                    </div>
                    <div class="stat">
                        <span class="stat-value"><%= user.wins %></span>
                        <span class="stat-label">Wins</span>
                    </div>
                    <div class="stat">
                        <span class="stat-value"><%= user.winRate %></span>
                        <span class="stat-label">Win Rate</span>
                    </div> -->
                    </div>

                    <% } %>
            </div>

            <!-- VS Divider -->
            <div class="vs-divider">
                <div class="sword-top"></div>
                <div class="vs-circle">
                    <span class="vs-text">VS</span>
                </div>
                <div class="sword-bottom"></div>
            </div>

            <!-- Player 2 Card -->
            <div class="player-card player2">
                <div class="card-pattern"></div>
                <div class="avatar">
                    <svg class="avatar-mandala" viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
                        <g transform="translate(100, 100)">
                            <!-- Outer petals -->
                            <g>
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(0)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(45)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(90)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(135)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(180)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(225)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(270)" />
                                <path
                                    d="M 0,-85 Q 8,-75 10,-65 Q 12,-55 10,-45 Q 8,-35 0,-25 Q -8,-35 -10,-45 Q -12,-55 -10,-65 Q -8,-75 0,-85 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(315)" />
                            </g>

                            <!-- Circles -->
                            <circle cx="0" cy="0" r="75" fill="none" stroke="#d4af37" stroke-width="1" />
                            <circle cx="0" cy="0" r="60" fill="none" stroke="#d4af37" stroke-width="1.5" />
                            <circle cx="0" cy="0" r="45" fill="none" stroke="#d4af37" stroke-width="1" />

                            <!-- Inner petals -->
                            <g>
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(0)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(45)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(90)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(135)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(180)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(225)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(270)" />
                                <path
                                    d="M 0,-40 C 5,-35 7,-30 7,-25 C 7,-20 5,-15 0,-10 C -5,-15 -7,-20 -7,-25 C -7,-30 -5,-35 0,-40 Z"
                                    fill="none" stroke="#d4af37" stroke-width="1.5" transform="rotate(315)" />
                            </g>

                            <!-- Center -->
                            <circle cx="0" cy="0" r="30" fill="none" stroke="#d4af37" stroke-width="1" />
                            <circle cx="0" cy="0" r="20" fill="none" stroke="#d4af37" stroke-width="1.5" />
                        </g>
                    </svg>
                    <div class="avatar-center">â™š</div>
                </div>

                <% if (user) { %>
                    <h2 class="player-name">
                        <%= user.firstName %>
                    </h2>
                    <p class="player-title">
                        <%= user.role %>
                    </p>
                    <!-- <div class="player-stats">
                    <div class="stat">
                        <span class="stat-value"><%= user.rating %></span>
                        <span class="stat-label">Rating</span>
                    </div>
                    <div class="stat">
                        <span class="stat-value"><%= user.wins %></span>
                        <span class="stat-label">Wins</span>
                    </div>
                    <div class="stat">
                        <span class="stat-value"><%= user.winRate %></span>
                        <span class="stat-label">Win Rate</span>
                    </div>
                </div> -->
                    <% } %>
            </div>
        </div>
    </div>
    <script src="https://cdn.socket.io/4.8.1/socket.io.min.js"
        integrity="sha384-mkQ3/7FUtcGyoppY6bz/PORYoGqOl7/aSUMn2ymDOJcapfS6PHqxhRTMh1RR0Q6+"
        crossorigin="anonymous"></script>
    <script async crossorigin="anonymous" data-clerk-publishable-key="<%= process.env.CLERK_PUBLISHABLE_KEY %>"
        src="https://cdn.jsdelivr.net/npm/@clerk/clerk-js@latest/dist/clerk.browser.js" type="text/javascript"></script>
    <!-- <script src="/js/userbutton.js"></script> -->
    <script src="/js/chessgame.js"></script>
    <script>
        // let timeLeft = 300; 
        // const timerElement = document.querySelector('.match-timer');
        // const statusElement = document.querySelector('.match-status');
        // const actionBtn = document.querySelector('.action-btn');


        document.addEventListener('DOMContentLoaded', function () {
            const socket = io();
            let isInQueue = false;

            // Add connection logging
            socket.on('connect', () => {
                // console.log('Socket connected:', socket.id);
            });

            socket.on('disconnect', () => {
                // console.log('Socket disconnected');
            });

            // Better Clerk handling with error checking
            if (window.Clerk) {
                window.Clerk.load().then(() => {
                    // console.log('Clerk loaded');
                    if (window.Clerk.user) {
                        const user = window.Clerk.user;
                        const userData = {
                            userId: user.id,
                            userName: `${user.firstName || ''} ${user.lastName || ''}`.trim() || 'Anonymous',
                            email: user.emailAddresses?.[0]?.emailAddress || 'No email'
                        };

                        // console.log('Sending userData:', userData);
                        socket.emit('joinMatchmaking', userData);
                        isInQueue = true;
                    } else {
                        // console.log('No user found, redirecting to sign-in');
                        window.location.href = '/sign-in';
                    }
                }).catch(error => {
                    console.error('Clerk loading error:', error);
                    // Fallback: try with server-side user data
                    startMatchmakingWithServerData();
                });
            } else {
                // console.log('Clerk not available, using server data');
                startMatchmakingWithServerData();
            }

            // Fallback function using server-side user data
            function startMatchmakingWithServerData() {
                <% if (user) { %>
                    const userData = {
                        userId: '<%= user.id %>',
                        userName: '<%= user.firstName %> <%= user.lastName || "" %>'.trim(),
                        email: '<%= user.emailAddresses && user.emailAddresses[0] ? user.emailAddresses[0].emailAddress : "No email" %>'
                    };
                    // console.log('Using server userData:', userData);
                    socket.emit('joinMatchmaking', userData);
                    isInQueue = true;
                <% } else { %>
                    // console.log('No user data available, redirecting');
                    window.location.href = '/sign-in';
                <% } %>
            }

            // Socket event handlers
            // socket.on('waitingForMatch', function (data) {
            //     console.log('Waiting for match:', data.message);
            //     // Update searching status if needed
            // });

            socket.on('matchFound', function (data) {
                // console.log('Match found!', data);


                // Redirect to the game room
                setTimeout(() => {
                    // console.log('Redirecting to:', `/play/${data.roomId}?color=${data.color}`);
                    window.location.href = `/play/${data.roomId}?color=${data.color}`;
                }, 3500);
            });

            socket.on('matchmakingError', function (message) {
                console.error('Matchmaking error:', message);
                alert('Matchmaking error: ' + message);
            });

            // Add debugging for all socket events
            socket.onAny((eventName, ...args) => {
                // console.log('Socket event received:', eventName, args);
            });
        });
    </script>

</body>

</html>